const _0x5ac87f = _0x1696;
function _0x3830() {
  const _0x1756bd = [
    "49114puEnnU",
    "content",
    "inline",
    "tr_open",
    "length",
    "2882270PzKgps",
    "core",
    "rowspan",
    "tr_close",
    "hidden",
    "1070eqBJsd",
    "colspan",
    "exports",
    "children",
    "244395QszXEd",
    "9sHCdur",
    "push",
    "type",
    "1219269ABlhLi",
    "4TFLZDB",
    "th_open",
    "6205968JxJToW",
    "tokens",
    "trim",
    "242184iXYiSM",
    "attrSet",
    "custom_table_process",
    "4234762HqClnA",
  ];
  _0x3830 = function () {
    return _0x1756bd;
  };
  return _0x3830();
}
(function (_0x4169f2, _0x1a7bed) {
  const _0x228eb8 = _0x1696,
    _0x9b6f88 = _0x4169f2();
  while (!![]) {
    try {
      const _0x51e840 =
        -parseInt(_0x228eb8(0xda)) / 0x1 +
        (parseInt(_0x228eb8(0xe4)) / 0x2) * (-parseInt(_0x228eb8(0xd7)) / 0x3) +
        (-parseInt(_0x228eb8(0xdb)) / 0x4) * (parseInt(_0x228eb8(0xcd)) / 0x5) +
        -parseInt(_0x228eb8(0xdd)) / 0x6 +
        parseInt(_0x228eb8(0xe3)) / 0x7 +
        parseInt(_0x228eb8(0xe0)) / 0x8 +
        (parseInt(_0x228eb8(0xd6)) / 0x9) * (parseInt(_0x228eb8(0xd2)) / 0xa);
      if (_0x51e840 === _0x1a7bed) break;
      else _0x9b6f88["push"](_0x9b6f88["shift"]());
    } catch (_0x4745b1) {
      _0x9b6f88["push"](_0x9b6f88["shift"]());
    }
  }
})(_0x3830, 0x9b8ae);
function _0x1696(_0x2425e2, _0xdb4556) {
  const _0x383088 = _0x3830();
  return (
    (_0x1696 = function (_0x16965, _0x334f77) {
      _0x16965 = _0x16965 - 0xcb;
      let _0x31c1ab = _0x383088[_0x16965];
      return _0x31c1ab;
    }),
    _0x1696(_0x2425e2, _0xdb4556)
  );
}
function TableMergeCells(_0x41c282) {
  const _0x3f8dcd = _0x1696;
  _0x41c282[_0x3f8dcd(0xce)]["ruler"][_0x3f8dcd(0xd8)](_0x3f8dcd(0xe2), function (_0x224e48) {
    const _0xd7054e = _0x3f8dcd,
      _0x4da777 = _0x224e48[_0xd7054e(0xde)];
    let _0x4280f6 = 0x0,
      _0x49789c = 0x0;
    for (let _0x410c8e = 0x0; _0x410c8e < _0x4da777[_0xd7054e(0xcc)]; _0x410c8e++) {
      _0x4da777[_0x410c8e]["type"] === _0xd7054e(0xdc) && (_0x49789c += 0x1);
    }
    for (let _0x22d39e = 0x0; _0x22d39e < _0x4da777[_0xd7054e(0xcc)]; _0x22d39e++) {
      const _0x277fdc = _0x4da777[_0x22d39e];
      ++_0x4280f6;
      if (_0x277fdc[_0xd7054e(0xd9)] === _0xd7054e(0xcb)) _0x4280f6 = 0x1;
      else {
        if (_0x4280f6 && _0x277fdc[_0xd7054e(0xd9)] === _0xd7054e(0xe6) && _0x277fdc["content"]["trim"]() === "==") {
          (_0x4da777[_0x22d39e]["content"] = ""),
            (_0x4da777[_0x22d39e]["children"] = ""),
            (_0x4da777[_0x22d39e][_0xd7054e(0xd1)] = !![]),
            (_0x4da777[_0x22d39e - 0x1][_0xd7054e(0xd1)] = !![]),
            (_0x4da777[_0x22d39e + 0x1]["hidden"] = !![]);
          const _0x38c303 = _0x22d39e - _0x49789c;
          findLastCol(_0x38c303, _0x4da777, _0x22d39e, _0x49789c);
        } else {
          if (_0x4280f6 && _0x277fdc[_0xd7054e(0xd9)] === _0xd7054e(0xe6) && _0x277fdc["content"]["trim"]() === "^^") {
            const _0x540d37 = _0x22d39e - (0x3 * _0x49789c + 0x3);
            (_0x4da777[_0x22d39e][_0xd7054e(0xe5)] = ""),
              (_0x4da777[_0x22d39e][_0xd7054e(0xd5)] = ""),
              (_0x4da777[_0x22d39e][_0xd7054e(0xd1)] = !![]),
              (_0x4da777[_0x22d39e - 0x1][_0xd7054e(0xd1)] = !![]),
              (_0x4da777[_0x22d39e + 0x1][_0xd7054e(0xd1)] = !![]),
              findLastRow(_0x540d37, _0x4da777, _0x22d39e, _0x49789c);
          } else {
            if (_0x4280f6 && _0x277fdc[_0xd7054e(0xd9)] === _0xd7054e(0xe6) && _0x277fdc[_0xd7054e(0xd9)] !== "tr_close") {
            } else _0x277fdc["type"] === _0xd7054e(0xd0) && (_0x4280f6 = 0x0);
          }
        }
      }
    }
  });
}
const findLastCol = (_0x429fcb, _0x378dae, _0x20bfcf, _0x51e805, _0x26810b = 0x1, _0x44adee = 0x2) => {
    const _0x20bd8b = _0x1696;
    let _0x4e1f9f = _0x20bfcf + _0x51e805 * _0x26810b - _0x26810b;
    if (_0x378dae[_0x4e1f9f]?.[_0x20bd8b(0xe5)][_0x20bd8b(0xdf)]() === "==")
      return (
        (_0x378dae[_0x4e1f9f][_0x20bd8b(0xe5)] = ""),
        (_0x378dae[_0x4e1f9f][_0x20bd8b(0xd5)] = ""),
        (_0x378dae[_0x4e1f9f][_0x20bd8b(0xd1)] = !![]),
        (_0x378dae[_0x4e1f9f - 0x1][_0x20bd8b(0xd1)] = !![]),
        (_0x378dae[_0x4e1f9f + 0x1][_0x20bd8b(0xd1)] = !![]),
        findLastCol(_0x429fcb, _0x378dae, _0x20bfcf, _0x51e805, ++_0x26810b, ++_0x44adee)
      );
    else _0x378dae[_0x429fcb][_0x20bd8b(0xe1)](_0x20bd8b(0xd3), _0x44adee);
  },
  findLastRow = (_0x506311, _0x8f3fa7, _0x4931d2, _0x441811, _0x245002 = 0x1, _0x2e4241 = 0x2) => {
    const _0x4b6db3 = _0x1696;
    let _0x5f3de5 = _0x4931d2 + (0x3 * _0x441811 + 0x2) * _0x245002;
    if (_0x8f3fa7[_0x5f3de5]?.["content"][_0x4b6db3(0xdf)]() === "^^")
      return (
        (_0x8f3fa7[_0x5f3de5][_0x4b6db3(0xe5)] = ""),
        (_0x8f3fa7[_0x5f3de5][_0x4b6db3(0xd5)] = ""),
        (_0x8f3fa7[_0x5f3de5][_0x4b6db3(0xd1)] = !![]),
        (_0x8f3fa7[_0x5f3de5 - 0x1][_0x4b6db3(0xd1)] = !![]),
        (_0x8f3fa7[_0x5f3de5 + 0x1][_0x4b6db3(0xd1)] = !![]),
        findLastRow(_0x506311, _0x8f3fa7, _0x4931d2, _0x441811, ++_0x245002, ++_0x2e4241)
      );
    else _0x8f3fa7[_0x506311][_0x4b6db3(0xe1)](_0x4b6db3(0xcf), _0x2e4241);
  };
module[_0x5ac87f(0xd4)] = TableMergeCells;
